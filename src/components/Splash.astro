<script>
  import { gsap } from 'gsap';
  import { Flip, MorphSVGPlugin } from 'gsap/all';

  import { scrollStart } from '../scripts/scroll';

  const splash: HTMLElement | null =
    document.querySelector('[data-js="splash"]');
  const splashBg: HTMLElement | null = document.querySelector(
    '[data-js="splash-bg"]',
  );
  const word1 = document.querySelector('[data-js="word-1"]');
  const word2 = document.querySelector('[data-js="word-2"]');
  const navWord1 = document.querySelectorAll('[data-js="splash-word-1"]');
  const navWord2 = document.querySelectorAll('[data-js="splash-word-2"]');
  const symbolstate1 = document.querySelector('[data-js="symbol-state-1"]');
  const symbolstate2 = document.querySelector('[data-js="symbol-state-2"]');
  const navSymbol = document.querySelector(
    '[data-js="splash-symbol"]',
  ) as HTMLElement;
  const navSymbolLine1 = navSymbol?.querySelector(
    '[data-js="symbol-line-1"]',
  ) as SVGPathElement;
  const navSymbolLine2 = navSymbol?.querySelector(
    '[data-js="symbol-line-2"]',
  ) as SVGPathElement;
  const symbolLineMorph = navSymbol?.querySelector(
    '[data-js="symbol-line-morph"]',
  ) as SVGPathElement;
  const navSymbol1 = navSymbol?.querySelector(
    '[data-js="symbol-1"]',
  ) as SVGPathElement;
  const navSymbol2 = navSymbol?.querySelector(
    '[data-js="symbol-2"]',
  ) as SVGPathElement;
  const symbolMorphState11 = navSymbol?.querySelector(
    '[data-js="symbol-morph-1-1"]',
  ) as SVGPathElement;
  const symbolMorphState12 = navSymbol?.querySelector(
    '[data-js="symbol-morph-1-2"]',
  ) as SVGPathElement;

  window.addEventListener('load', () => {
    gsap.registerPlugin(Flip, MorphSVGPlugin);

    const simpleSplash = () =>
      gsap
        .timeline({
          delay: 0.2,
          defaults: { duration: 1, ease: 'power3.out' },
          onComplete: () => {
            sessionStorage.setItem('splash:done', 'true');
            scrollStart();
          },
        })
        .to(splash, {
          autoAlpha: 0,
          duration: 0.5,
        })
        .to(
          [...navWord1, ...navWord2, navSymbol],
          {
            autoAlpha: 1,
          },
          '<0.2',
        );

    // if (!sessionStorage.getItem('splash:done')) {
    // eslint-disable-next-line no-constant-condition
    if (true) {
      const navWord1State1 = Flip.getState(navWord1[0], {
        props: 'color',
      });
      const navWord1State2 = Flip.getState(navWord1[1], {
        props: 'color',
      });
      const navWord2State1 = Flip.getState(navWord2[0], {
        props: 'color',
      });
      const navWord2State2 = Flip.getState(navWord2[1], {
        props: 'color',
      });
      const navSymbolState = Flip.getState(navSymbol, { props: 'color' });

      Flip.fit(navWord1[0], word1, { props: 'color' });
      Flip.fit(navWord1[1], word1, { props: 'color' });
      Flip.fit(navWord2[0], word2, { props: 'color' });
      Flip.fit(navWord2[1], word2, { props: 'color' });
      Flip.fit(navSymbol, symbolstate1, { props: 'color' });

      gsap
        .timeline({
          defaults: { duration: 1, ease: 'power3.out' },
          delay: 0.2,
          onComplete: () => {
            sessionStorage.setItem('splash:done', 'true');
            scrollStart();
          },
        })
        .set(navSymbol, { autoAlpha: 1 })
        .fromTo(
          navSymbol,
          { clipPath: 'inset(100% 0% 0% 0%)' },
          { clipPath: 'inset(0% 0% 0% 0%)' },
        )
        .to(navSymbolLine1, {
          rotate: '90deg',
          transformOrigin: 'center center',
        })
        .to(
          navSymbolLine2,
          { rotate: '180deg', transformOrigin: 'center center' },
          '<',
        )
        .to(
          [navSymbolLine1, navSymbolLine2],
          { morphSVG: { shape: symbolLineMorph } },
          '<',
        )
        .set([navSymbol1, navSymbol2], { autoAlpha: 1 })
        .set([navSymbolLine1, navSymbolLine2], { autoAlpha: 0 })
        .to(navSymbol1, {
          morphSVG: {
            shape: symbolMorphState11,
            shapeIndex: 0,
            type: 'linear',
          },
        })
        .to(
          navSymbol2,
          {
            morphSVG: {
              shape: symbolMorphState12,
              shapeIndex: 0,
              type: 'linear',
            },
          },
          '<',
        )
        .add(
          Flip.fit(navSymbol, symbolstate2, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
        )
        .fromTo(
          [...navWord1],
          { x: -20, autoAlpha: 0 },
          { x: 0, autoAlpha: 1 },
          '<0.1',
        )
        .fromTo(
          [...navWord2],
          { x: -20, autoAlpha: 0 },
          { x: 0, autoAlpha: 1 },
          '<0.1',
        )
        .add(
          Flip.fit(navWord1[0], navWord1State1, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
        )
        .add(
          Flip.fit(navWord1[1], navWord1State2, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
          '<',
        )
        .add(
          Flip.fit(navWord2[0], navWord2State1, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
          '<',
        )
        .add(
          Flip.fit(navWord2[1], navWord2State2, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
          '<',
        )
        .add(
          Flip.fit(navSymbol, navSymbolState, {
            duration: 1,
            ease: 'power3.out',
            props: 'color',
          }) as gsap.core.Tween,
          '<',
        )
        .to(splashBg, { autoAlpha: 0 }, '<0.1');
    } else {
      simpleSplash();
    }
  });
</script>

<div class="splash" data-js="splash">
  <div class="bg" data-js="splash-bg"></div>
  <div class="container">
    <div class="grid">
      <span class="word word-1" data-js="word-1">
        <svg viewBox="0 0 200 39" fill="none">
          <path
            d="M32.7886 18.3012V36.9922H29.2329L28.6452 30.7089C26.6523 34.7679 22.9963 37.5267 17.1183 37.5267C6.62366 37.5122 0 30.03 0 18.8934C0 7.75671 6.75269 0.0722656 17.319 0.0722656C26.3226 0.0722656 32 4.91116 32.6166 12.9712H27.2974C26.5951 7.74226 22.8101 4.81004 17.319 4.81004C9.96415 4.81004 5.44802 10.66 5.44802 18.85C5.44802 27.04 9.89247 32.8612 17.7491 32.8612C23.5269 32.8612 27.8854 29.1489 27.8854 22.5189H15.6272V18.3012H32.7886Z"
            fill="currentColor"></path>
          <path
            d="M66.3789 10.5283C72.2426 10.5283 76.4863 13.3167 76.4863 19.0801H76.4727V36.9902H71.6699V32.7588C70.7378 34.5209 68.1137 37.5107 62.9238 37.5107C58.0494 37.5107 54.2355 34.9686 54.2354 30.2021C54.2354 25.4355 57.7482 23.1961 64.9453 22.1416C69.662 21.4483 71.6835 20.8997 71.6836 18.502C71.6836 16.1042 69.4904 14.5294 66.4512 14.5293C62.5229 14.5293 60.6156 16.5084 60.3574 20.0615H55.4834C55.6412 15.1217 58.8666 10.5285 66.3789 10.5283ZM151.097 10.5283C156.961 10.5283 161.204 13.3167 161.204 19.0801H161.189V36.9902H156.387V32.7588C155.455 34.521 152.831 37.5107 147.642 37.5107C142.767 37.5107 138.953 34.9686 138.953 30.2021C138.953 25.4355 142.466 23.1961 149.663 22.1416C154.38 21.4483 156.401 20.8996 156.401 18.502C156.401 16.1042 154.208 14.5293 151.168 14.5293C147.24 14.5294 145.333 16.5085 145.075 20.0615H140.2C140.358 15.1217 143.584 10.5283 151.097 10.5283ZM197.922 36.9902H192.918V33.2207C192.201 34.6508 189.849 37.5107 184.918 37.5107C178.137 37.5107 173.879 32.1227 173.879 24.207C173.879 15.7282 178.839 10.4844 185.233 10.4844C188.818 10.4844 191.714 12.1747 192.918 14.7168V0.0703125H197.922V36.9902ZM90.4229 10.5156C96.645 10.5156 101.132 13.1881 101.906 20.0059H97.2041C96.9174 16.0481 93.9062 14.4883 90.3936 14.4883C86.8814 14.4884 85.1035 16.0771 85.1035 18.0703C85.1036 20.6702 87.1397 21.4642 91.4551 22.4609C96.0428 23.5152 100.874 25.2205 100.874 30.3193C100.874 35.4181 96.4874 37.498 91.1973 37.498C85.3191 37.498 81.3907 34.4792 80.9746 28.9473H85.7197C86.0353 32.0092 87.9855 33.6553 91.4551 33.6553C94.1647 33.6553 95.8994 32.6881 95.8994 30.377C95.8994 27.3148 92.4725 26.852 88.874 25.9854C83.67 24.7144 80.2002 22.6055 80.2002 18.0557C80.2003 13.5057 84.2005 10.5156 90.4229 10.5156ZM111.799 30.8799L117.763 10.9463H122.981L128.917 30.8652L133.662 10.9463H138.565L131.913 36.9902H126.724L120.372 15.8867L114.021 36.9902H108.802L102.121 10.9463H107.024L111.799 30.8799ZM170.596 36.9902H165.435V0.0703125H170.596V36.9902ZM42.7822 17.3916C44.1014 13.7516 46.4523 10.9922 51.2695 10.9922H54.624V15.3262H51.5557C46.9395 15.3263 42.7823 17.5939 42.7822 26.708V36.9785H37.6494V10.9922H42.7822V17.3916ZM71.6699 23.7881C70.2218 24.6402 68.1141 25.1468 65.7344 25.5801C61.4045 26.3889 59.2539 27.5011 59.2539 30.0723C59.2541 32.6432 61.4188 33.7402 63.9707 33.7402C67.8989 33.7402 71.6553 30.953 71.6553 25.6807H71.6699V23.7881ZM156.387 23.7881C154.939 24.6402 152.831 25.1467 150.451 25.5801C146.122 26.3889 143.972 27.5012 143.972 30.0723C143.972 32.6432 146.137 33.7402 148.688 33.7402C152.617 33.7401 156.373 30.9529 156.373 25.6807H156.387V23.7881ZM186.064 14.6738C181.262 14.6741 178.939 18.9643 178.939 24.4531C178.94 29.9417 181.319 33.4804 185.907 33.4805C190.495 33.4805 192.903 30.0714 192.903 23.9326C192.903 18.1404 190.523 14.6738 186.064 14.6738Z"
            fill="currentColor"></path>
        </svg>
      </span>
      <span class="word word-2" data-js="word-2">
        <svg viewBox="0 0 14 41" fill="none" class="slash">
          <path
            d="M13.6299 0L1.97963 40.9471H0L11.6637 0H13.6433H13.6299Z"
            fill="currentColor"></path>
        </svg>
        <svg viewBox="0 0 194 41" fill="none">
          <path
            d="M13.6433 34.023C17.442 34.023 19.2478 32.4492 19.2478 29.6717C19.2478 26.405 16.8803 25.1882 10.5268 23.654C3.73185 22.0008 0 19.2763 0 13.6288C0 7.38625 6.07261 4.01367 12.3459 4.01367C20.1038 4.01367 25.4675 7.49206 26.1898 15.9566H21.2006C20.6924 11.3143 18.1911 8.36496 12.2389 8.36496C8.53376 8.36496 5.04267 10.2033 5.04267 13.695C5.04267 16.8824 6.92866 18.5092 13.4694 20.0698C19.5287 21.5246 24.3707 23.6672 24.3707 29.5395C24.3707 35.4117 20.0369 38.2817 13.3892 38.2817C5.8586 38.2817 1.49809 34.0892 0.949682 27.754H5.97898C6.43376 31.9863 9.2293 34.0098 13.6166 34.0098L13.6433 34.023Z"
            fill="currentColor"></path>
          <path
            d="M38.2021 13.5752C44.1944 13.5752 48.3412 17.1995 48.8896 22.6221H44.3145C43.86 19.3579 41.523 17.3343 38.25 17.3311C33.7458 17.3343 31.1797 21.2355 31.1797 25.9287C31.1799 31.0204 34.1225 34.499 38.5898 34.499C42.2548 34.499 44.0338 32.3559 44.6357 29.4727H49.1836C48.4613 34.6836 44.8495 38.2812 38.5361 38.2812C30.8586 38.2811 26.498 32.7787 26.498 25.9014C26.4982 19.0241 30.9526 13.5752 38.2021 13.5752ZM87.1846 13.5752C92.6551 13.5753 96.6143 16.1283 96.6143 21.4053H96.6006V37.8047H92.1201V33.9297C91.2507 35.5432 88.8028 38.2812 83.9609 38.2812C79.4132 38.2812 75.8555 35.9534 75.8555 31.5889C75.8555 27.2244 79.1321 25.1745 85.8467 24.209C90.2473 23.5741 92.1338 23.0715 92.1338 20.876C92.1338 18.6805 90.0866 17.2393 87.251 17.2393C83.5861 17.2393 81.8072 19.0512 81.5664 22.3047H77.0186C77.1657 17.7815 80.1757 13.5752 87.1846 13.5752ZM111.366 13.5752C118.295 13.5752 122.348 18.2572 122.348 26.166V27.0654H104.679C105.013 31.8003 107.782 34.5908 111.901 34.5908C115.245 34.5908 117.412 32.8587 117.987 30.0684H122.455C121.853 34.5253 118.428 38.2812 111.794 38.2812C103.969 38.2811 99.9297 32.6596 99.9297 25.9014C99.9299 19.1432 103.956 13.5752 111.366 13.5752ZM182.258 13.5752C189.186 13.5752 193.24 18.2572 193.24 26.166V27.0654H175.57C175.905 31.8001 178.673 34.5907 182.793 34.5908C186.137 34.5908 188.304 32.8587 188.879 30.0684H193.347C192.745 34.5252 189.321 38.2812 182.687 38.2812C174.862 38.2812 170.822 32.6598 170.822 25.9014C170.822 19.1433 174.848 13.5754 182.258 13.5752ZM167.973 37.8057H163.157V4H167.973V37.8057ZM132.515 14.0107H138.533V17.5557H132.515V29.4062C132.515 32.448 133.839 33.9951 136.581 33.9951H139.376V37.8047H135.403C130.856 37.8046 127.766 34.9739 127.766 29.9746V17.542H123.218V13.998H127.766V8.45605L132.515 7.64941V14.0107ZM56.3799 4.5957V13.5225H56.3525V20.9424C57.6099 17.2524 60.1382 13.5098 65.4082 13.5098C70.1699 13.5098 73.0459 16.4193 73.0459 22.7676V37.792H68.2842V23.667C68.1905 19.3951 66.9862 17.3848 63.9365 17.3848C60.1647 17.3849 56.5933 21.5113 56.3926 29.8301C56.3926 30.0549 56.3799 30.9148 56.3799 31.1396V37.7793H51.6582V13.999H51.6846V4H55.751L56.3799 4.5957ZM159.641 16.9736L147.175 33.916H160.056V37.791H140.941V34.9873L153.608 17.8203H141.784V13.9453H159.641V16.9736ZM92.1201 25.7168C90.7692 26.4971 88.8024 26.9597 86.582 27.3564C82.5428 28.0971 80.5362 29.1157 80.5361 31.4697C80.5361 33.8239 82.5566 34.8291 84.9375 34.8291C88.6023 34.8289 92.1064 32.2765 92.1064 27.4492H92.1201V25.7168ZM111.446 17.1592C107.514 17.1593 105.334 19.8047 104.772 23.8516H117.612C117.251 19.8707 115.379 17.1592 111.446 17.1592ZM182.339 17.1592C178.406 17.1592 176.226 19.8046 175.664 23.8516H188.505C188.144 19.8708 186.271 17.1593 182.339 17.1592Z"
            fill="currentColor"></path>
        </svg>
        <svg
          viewBox="0 0 38 24"
          fill="none"
          aria-hidden="true"
          class="symbol symbol-1"
          data-js="symbol-state-1"
        >
          <path
            d="M12 24C9.15759 24 6.84241 21.6848 6.84241 18.8424C6.84241 17.914 6.08596 17.1576 5.15759 17.1576C2.31519 17.1576 0 14.8424 0 12C0 9.15759 2.31519 6.84241 5.15759 6.84241C6.08596 6.84241 6.84241 6.08596 6.84241 5.15759C6.84241 2.31519 9.15759 0 12 0C14.8424 0 17.1576 2.31519 17.1576 5.15759C17.1576 8 14.8424 10.3152 12 10.3152C11.0716 10.3152 10.3152 11.0716 10.3152 12C10.3152 12.9284 11.0716 13.6848 12 13.6848C14.8424 13.6848 17.1576 16 17.1576 18.8424C17.1576 21.6848 14.8424 24 12 24Z"
            fill="currentColor"></path>
          <path
            d="M30.8462 18.8424C30.8462 17.914 31.6027 17.1576 32.531 17.1576C35.3734 17.1576 37.6886 14.8424 37.6886 12C37.6886 9.15759 35.3734 6.84241 32.531 6.84241C31.6027 6.84241 30.8462 6.08596 30.8462 5.15759C30.8462 2.31519 28.531 0 25.6886 0C22.8462 0 20.531 2.31519 20.531 5.15759C20.531 8 22.8462 10.3152 25.6886 10.3152C26.617 10.3152 27.3734 11.0716 27.3734 12C27.3734 12.9284 26.617 13.6848 25.6886 13.6848C22.8462 13.6848 20.531 16 20.531 18.8424C20.531 21.6848 22.8462 24 25.6886 24C28.531 24 30.8462 21.6848 30.8462 18.8424Z"
            fill="currentColor"></path>
        </svg>
      </span>
      <svg
        viewBox="0 0 38 24"
        fill="none"
        aria-hidden="true"
        class="symbol symbol-2"
        data-js="symbol-state-2"
      >
        <path
          d="M12 24C9.15759 24 6.84241 21.6848 6.84241 18.8424C6.84241 17.914 6.08596 17.1576 5.15759 17.1576C2.31519 17.1576 0 14.8424 0 12C0 9.15759 2.31519 6.84241 5.15759 6.84241C6.08596 6.84241 6.84241 6.08596 6.84241 5.15759C6.84241 2.31519 9.15759 0 12 0C14.8424 0 17.1576 2.31519 17.1576 5.15759C17.1576 8 14.8424 10.3152 12 10.3152C11.0716 10.3152 10.3152 11.0716 10.3152 12C10.3152 12.9284 11.0716 13.6848 12 13.6848C14.8424 13.6848 17.1576 16 17.1576 18.8424C17.1576 21.6848 14.8424 24 12 24Z"
          fill="currentColor"></path>
        <path
          d="M30.8462 18.8424C30.8462 17.914 31.6027 17.1576 32.531 17.1576C35.3734 17.1576 37.6886 14.8424 37.6886 12C37.6886 9.15759 35.3734 6.84241 32.531 6.84241C31.6027 6.84241 30.8462 6.08596 30.8462 5.15759C30.8462 2.31519 28.531 0 25.6886 0C22.8462 0 20.531 2.31519 20.531 5.15759C20.531 8 22.8462 10.3152 25.6886 10.3152C26.617 10.3152 27.3734 11.0716 27.3734 12C27.3734 12.9284 26.617 13.6848 25.6886 13.6848C22.8462 13.6848 20.531 16 20.531 18.8424C20.531 21.6848 22.8462 24 25.6886 24C28.531 24 30.8462 21.6848 30.8462 18.8424Z"
          fill="currentColor"></path>
      </svg>
    </div>
  </div>
</div>

<style lang="scss">
  .splash {
    position: fixed;
    inset: 0;
    z-index: var(--zi-splash);
    width: 100%;
    height: 100%;
    padding-right: var(--scroll-bar-width, 0px);
    color: var(--c-primary);
    pointer-events: none;
  }

  .bg {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: var(--c-primary-dark);
  }

  .container,
  .grid {
    width: 100%;
    height: 100%;
    justify-items: start;
    align-items: center;
  }

  .word,
  .symbol {
    z-index: 1;
    opacity: 0;
  }

  .word-1 {
    grid-column: 1 / span 4;
    width: to-rem(140);

    svg {
      width: 100%;
    }
  }

  .word-2 {
    grid-column: 5 / span 4;
    position: relative;
    display: flex;
    align-items: center;
    width: to-rem(145);

    svg {
      width: 100%;
    }

    .slash {
      position: absolute;
      right: 100%;
      width: to-rem(10);
      width: 7%;
    }

    .symbol {
      position: absolute;
      left: 0;
    }
  }

  .symbol {
    grid-column-start: 9;
    width: to-rem(38) !important;
  }
</style>
